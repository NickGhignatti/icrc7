type Account = record { owner : principal; subaccount : opt vec nat8 };
type Icrc7MintArg = record {
  to : Account;
  token_id : nat;
  memo : opt vec nat8;
  from_subaccount : opt vec nat8;
  token_description : opt text;
  token_logo : opt text;
  token_name : opt text;
};
type InitArg = record {
  icrc7_supply_cap : opt nat;
  icrc7_description : opt text;
  icrc7_total_supply : nat;
  tx_window : opt nat64;
  minting_account : opt Account;
  icrc7_max_query_batch_size : opt nat;
  permitted_drift : opt nat64;
  icrc7_max_take_value : opt nat;
  icrc7_max_memo_size : opt nat;
  icrc7_symbol : text;
  icrc7_max_update_batch_size : opt nat;
  icrc7_atomic_batch_transfers : opt bool;
  icrc7_default_take_value : opt nat;
  icrc7_logo : opt text;
  icrc7_name : text;
};
type MintError = variant {
  GenericError : record { message : text; error_code : nat };
  SupplyCapReached;
  Unauthorized;
  GenericBatchError : record { message : text; error_code : nat };
  TokenIdAlreadyExist;
};
type Result = variant { Ok : nat; Err : MintError };
type Result_1 = variant { Ok : nat; Err : TransferError };
type TransferArg = record {
  to : Account;
  token_id : nat;
  memo : opt vec nat8;
  from_subaccount : opt vec nat8;
  created_at_time : opt nat64;
};
type TransferError = variant {
  GenericError : record { message : text; error_code : nat };
  Duplicate : record { duplicate_of : nat };
  NonExistingTokenId;
  Unauthorized;
  CreatedInFuture : record { ledger_time : nat64 };
  InvalidRecipient;
  GenericBatchError : record { message : text; error_code : nat };
  TooOld;
};
service : (InitArg) -> {
  icrc7_atomic_batch_transfers : () -> (opt bool) query;
  icrc7_default_take_value : () -> (opt nat) query;
  icrc7_description : () -> (opt text) query;
  icrc7_logo : () -> (opt text) query;
  icrc7_max_memo_size : () -> (opt nat) query;
  icrc7_max_query_batch_size : () -> (opt nat) query;
  icrc7_max_take_value : () -> (opt nat) query;
  icrc7_max_update_batch_size : () -> (opt nat) query;
  icrc7_mint : (Icrc7MintArg) -> (Result);
  icrc7_name : () -> (text) query;
  icrc7_owner_of : (vec nat) -> (vec opt Account) query;
  icrc7_supply_cap : () -> (opt nat) query;
  icrc7_symbol : () -> (text) query;
  icrc7_total_supply : () -> (nat) query;
  icrc7_transfer : (vec TransferArg) -> (vec opt Result_1);
}
